// ██████ Integrations █████████████████████████████████████████████████████████

// —— Import base command
const Command = require( "../../Structures/Command" );

const fetch     = require( "node-fetch" )
    , cheerio   = require( "cheerio" )
    , ytdl      = require( "ytdl-core" );



// ██████ | ███████████████████████████████████████████████████████████████████

const cleanTry = ( string ) => string.replace( /(?:\<|\(|\『|\「)(.*?)(?:\」|\』|\)|\>)/g, "" );

// —— Create & export a class for the command that extends the base command
class Lyric extends Command {

    //https://www.youtube.com/watch?v=eFah8TCWOro

	constructor(client) {
		super(client, {
			name        : "lyric",
			description : "Skips the media currently playing. Ignores the repetition of the track",
			usage       : "skip { Number of elements to skip }",
			args        : false,
			category    : "Music",
			cooldown    : 1000,
			userPerms   : "CONNECT",
			allowDMs    : false,
		});

	}

    async run( message, [ ...query ] ) {

        const player = message.guild.player;
        let search;
        let title, author;

        if ( !query.length ) {

            if ( !player._queue.length )
                return super.respond( "Nothing to search" );

            switch ( player._queue[0].source ) {

                case "youtube": {

                    const { videoDetails } = await ytdl.getBasicInfo( player._queue[0].id );

                    if ( videoDetails.description.includes("Auto-generated by YouTube") ) {

                        title   = videoDetails.title;
                        author  = videoDetails.author.name.replace( " - Topic", "" );

                    } else {

                        title   = videoDetails.media.song;
                        author  = videoDetails.media.artist;

                    }
                } break;

                default:
                    break;
            }









        try {

            const data = await fetch( encodeURI( `https://www.musixmatch.com/search/${author} ${title}`) ).then( ( found ) => found.text() );



            if ( !data )
                throw new Error;

            search = cheerio.load( data )(".lyrics__content__ok").text();



            if ( !search)
                throw new Error;

        } catch ( error ) {

            console.log(error);

            return super.respond("nothing found");
        }













            }






        }








}

module.exports = Lyric;



//

//         player._queue[0] = {
//             id: '1tk1pqwrOys',
//             length: 224,
//             title: '廻廻奇譚 - Eve MV',
//             url: 'https://www.youtube.com/watch?v=1tk1pqwrOys',
//             author: { name: 'Eve', url: null },
//             live: false,
//             thumb: 'https://i.ytimg.com/vi/1tk1pqwrOys/hqdefault.jpg?sqp=-oaymwEjCOADEI4CSFryq4qpAxUIARUAAAAAGAElAADIQj0AgKJDeAE=&rs=AOn4CLAts6QcWYK3X7QAVRVNnFu8PznXcw',
//             source: 'spotify'
//         }



//     try {

//         const search    = query ? query.join(" ") : `${ cleanTry(player._queue[0].title) } ${ player._queue[0].name || ""}`;

//         const research  = await fetch( encodeURI( `https://www.musixmatch.com/search/${search}?` ) ).then( ( found ) => found.text() );

//         const found     = cheerio.load( search )( "h2[class=\"media-card-title\"] > a ").attr( "href" );

//         console.log(found);



//     } catch (error) {
//         console.error(error);
//     }




//     //         , search = await fetch( encodeURI( `https://www.musixmatch.com/search/${query}?` ) ).then( ( found ) => found.text() )

//     //         , found  = await cheerio.load( search )( "h2[class=\"media-card-title\"] > a ").attr( "href" );

//     //         console.log(encodeURI( `https://www.musixmatch.com/search/${query}?` ));


//     //     if ( !found )
//     //         console.log( "Nothing found" );

//     //     const lyrics = await fetch( encodeURI( `https://www.musixmatch.com${found}` ) ).then( ( found ) => found.text() )

//     //         , cnt    = await cheerio.load( lyrics )( "span.lyrics__content__ok" ).text();

//     //     console.log(cnt);

//     // } catch (error) {

//     //     console.error(error);

//     // }

// }




// //     const html    = await fetched.text();

// //     const $ = cheerio.load( html );

// //     const search = $("html").find( ".media-card-title > a" );

// //     console.log(search.length);

// //     if ( !search.length > 0 )
// //         return "No lyric found";

// //     const page = encodeURI(`https://www.musixmatch.com${search.attr("href")}`);

// //     console.log(page);

// //     const Lyfetched = await fetch(page);
// //     const Lyhtml    = await Lyfetched.text();

// //     const Lyrics = cheerio.load( Lyhtml )

// //     return Lyrics("html").find(".lyrics__content__ok").text();











// // }



// }



